static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 8800
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_http
                # Structured access log in JSON format
                access_log:
                - name: envoy.access_loggers.stderr
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StderrAccessLog
                    log_format:
                      json_format:
                        type: "request"
                        protocol: "%PROTOCOL%"
                        method: "%REQ(:METHOD)%"
                        path: "%REQ(:path)%"
                        responseCode: "%RESPONSE_CODE%"
                        duration: "%DURATION%"
                        CONNECTION_TERMINATION_DETAILS: "%CONNECTION_TERMINATION_DETAILS%"
                        UPSTREAM_CLUSTER: "%UPSTREAM_CLUSTER%"
                        UPSTREAM_HOST: "%UPSTREAM_HOST%"
                        UPSTREAM_LOCAL_ADDRESS: "%UPSTREAM_LOCAL_ADDRESS%"
                        UPSTREAM_TRANSPORT_FAILURE_REASON: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
                      omit_empty_values: True
                      
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains:
                        - "*"
                      # domains: ["test1.com"]
                      routes:
                        - match:
                            prefix: "/api/v1"
                          route:
                            cluster: server1
                        - match:
                            prefix: "/api/v2"
                          route:
                            cluster: server2

                # Don't forget: No error message but also no functionality if missing
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config: {}
  clusters:
    - name: server1
      connect_timeout: 0.25s
      # https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/cluster.proto#enum-cluster-discoverytype
      #    type: STRICT_DNS
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      protocol_selection: USE_DOWNSTREAM_PROTOCOL
      health_checks:
        always_log_health_check_failures: true
        timeout: 0.1s
        interval: 3s
        unhealthy_threshold: 3
        healthy_threshold: 1
        http_health_check:
          path: /health
      dns_lookup_family: V4_ONLY
      load_assignment:
        cluster_name: server1
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 192.168.0.102
                      port_value: 4000

    - name: server2
      connect_timeout: 0.25s
      # https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/cluster.proto#enum-cluster-discoverytype
      #    type: STRICT_DNS
      type: LOGICAL_DNS
      health_checks:
        always_log_health_check_failures: true
        timeout: 0.1s
        interval: 3s
        unhealthy_threshold: 3
        healthy_threshold: 1
        http_health_check:
          path: /health
      dns_lookup_family: V4_ONLY
      load_assignment:
        cluster_name: server2
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 192.168.0.102
                      port_value: 4001
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8081
